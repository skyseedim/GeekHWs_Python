"""
1. Реализовать функцию, принимающую два числа (позиционные аргументы) и выполняющую их деление.
Числа запрашивать у пользователя, предусмотреть обработку ситуации деления на ноль.
"""

print("Task № 1")
def div(num1, num2):
    try:
        return(num1/num2)
    except ZeroDivisionError:
        return float('inf')
list_of_num = input("Введите два числа через пробел, которые нужно поделить: ").split()
print('результат деления ', div(float(list_of_num[0]), float(list_of_num[1])))

"""
2. Реализовать функцию, принимающую несколько параметров, описывающих данные пользователя: 
имя, фамилия, год рождения, город проживания, email, телефон. Функция должна принимать параметры как 
именованные аргументы. Реализовать вывод данных о пользователе одной строкой.
"""

print("\nTask № 2")
def user_data(name, surname, year_b, city, email, tel, a = 'Данные пользователя'):
    print(a)
    print(f" Имя: {name}; \n Фамилия: {surname}; \n Год рождения: {year_b}; \n Город проживания: {city}; \n \
email: {email}; \n телефон: {tel}")
user_data(name = "Иван", surname = "Иванов", year_b = 1991, city = "Москва", email = "ivanon@ix.ru", tel = "35-12")

"""
3. Реализовать функцию my_func(), которая принимает три позиционных аргумента, 
и возвращает сумму наибольших двух аргументов.
"""

print("\nTask № 3")
def sum_of_max(num1, num2, num3):
    my_list = [num1, num2, num3]
    my_list.remove(min(my_list))
    return sum(my_list)

"""
4. Программа принимает действительное положительное число x и целое отрицательное число y. 
Необходимо выполнить возведение числа x в степень y. Задание необходимо реализовать в виде функции my_func(x, y). 
При решении задания необходимо обойтись без встроенной функции возведения числа в степень.
Подсказка: попробуйте решить задачу двумя способами. Первый — возведение в степень с помощью оператора **. 
Второй — более сложная реализация без оператора **, предусматривающая использование цикла.
"""

print("\nTask № 4")
def my_func(x, y):
    return(x**y)

def my_func2(x,y):
    res = 1.
    for i in range(abs(y)):
        res *= (1 / x)
    return(res)

"""
5. Программа запрашивает у пользователя строку чисел, разделенных пробелом. При нажатии Enter должна выводиться сумма чисел. 
Пользователь может продолжить ввод чисел, разделенных пробелом и снова нажать Enter. Сумма вновь введенных чисел будет 
добавляться к уже подсчитанной сумме. Но если вместо числа вводится специальный символ, выполнение программы завершается. 
Если специальный символ введен после нескольких чисел, то вначале нужно добавить сумму этих чисел к полученной ранее сумме 
и после этого завершить программу.
"""

print("\nTask № 5")
sum1 = 0
while True:
    try:
        my_list = input("Введите числа через пробел (Для завершения введите любой нечисловой символ): ").split()
        for i in my_list:
            sum1 += float(i)
    except ValueError:
        print("Сумма чисел равна ", sum1)
        break
    print("Сумма чисел равна ", sum1)

"""
6. Реализовать функцию int_func(), принимающую слово из маленьких латинских букв и возвращающую его же, 
но с прописной первой буквой. Например, print(int_func(‘text’)) -> Text.
Продолжить работу над заданием. В программу должна попадать строка из слов, разделенных пробелом. 
Каждое слово состоит из латинских букв в нижнем регистре. Сделать вывод исходной строки, 
но каждое слово должно начинаться с заглавной буквы. Необходимо использовать написанную ранее функцию int_func().
"""

print("\nTask № 6")
def int_func(word):
    word = word.capitalize()
    return(word)

string = input("Введите строку из слов, разделенных пробелом :").split()
result = [int_func(i) for i in string]
result = ' '.join(result)
print(result)
